# Guillaume Orlando
# 10/09/2021
# Emotet string decoder (IDAPython3)
import struct
from ida_bytes import *
from idautils import *
from idaapi import *
from idc import *

function_name = 'func_string_decode'

def extract_array_content(address):
        array = []
        for x in range(0, 100):
                dword = ida_bytes.get_dword(address)
                array.append(dword)
                address += 4
                if dword == 0x0:
                        return array
        return array

def decode_str(key, buff_addr):
        buf_dword = extract_array_content(buff_addr)
        size = buf_dword[0] ^ key
        decoded = b''
        for x in range(1, len(buf_dword)):
                xor_result = buf_dword[x] ^ key
                decoded += struct.pack('<I', xor_result)
        return decoded[:size].decode()

for ea in CodeRefsTo(get_name_ea_simple(function_name), 0):
        cfunc = idaapi.decompile(ea)
        args = str(cfunc).split(function_name + '(')[1].split(')')[0]
        key = int(args.split(', ')[1])
        array_addr = int(args.split(', ')[0].split('_')[1], 16)
        print('String decoder call: ' + hex(ea) + ' with key: ' + str(key) + ' and buffer: ' + hex(array_addr))
        decoded = decode_str(key, array_addr)
        print('Result: ' + decoded)
        idc.set_cmt(ea, decoded, 0)
                
