# Phorpiex Configuration extractor
# Guillaume Orlando
# 10/01/2021

import re
import sys
import string
import requests 

extracted_str = []
target = sys.argv[1]

def hasNumbers(inputString):
    return any(char.isdigit() for char in inputString)

def strings(filename, min=4):
    with open(filename, errors="ignore") as f:
        result = ""
        for c in f.read():
            if c in string.printable:
                result += c
                continue
            if len(result) >= min:
                yield result
            result = ""
        if len(result) >= min:
            yield result

#for s in strings("Sample_5fce641ee11d920016b2db2f.bin"):
for s in strings(target):
    if len(s) >= 4:
        extracted_str.append(s)

if 'Tldr' not in extracted_str:
    print("[-] Not a Phorpiex sample")
    exit(1)

print("[+] Phorpiex sample detected")

decoy_url = list(filter(lambda v: re.match('http://[a-z]{16}.', v), extracted_str))
if decoy_url:
    print("[+] " + str(len(decoy_url)) + " decoy URL found:")
    for elem in decoy_url:
        print("\t" + str(elem))

user_agent = list(filter(lambda v: re.match('Mozilla', v), extracted_str))
if user_agent:
    print("[+] " + str(len(user_agent)) + " User Agent found with the value:")
    print("\t" + str(list(set(user_agent))))

other_url = list(filter(lambda v: re.match('http://', v), extracted_str))
other_url = list(set(other_url) - set(decoy_url))

if other_url:
    print("[+] Other URL:")
    for elem in other_url:
        if "api.wipmania" in elem:
            print("\t" + str(elem) + " (Used to get victim IP address)")
            
        else:
            print("\t" + str(elem))

mutex = list(filter(lambda v: re.match('[a-z0-9]{8}', v), extracted_str))
for elem in mutex:
    if len(elem) == 8:
        if hasNumbers(elem):
            print("[+] Potential mutex: '" + elem + "'")

bitcoin_wallet = list(filter(lambda v: re.match('^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$', v), extracted_str))
ethereum_wallet = list(filter(lambda v: re.match('^0x[a-fA-F0-9]{40}$', v), extracted_str))
monero_wallet = list(filter(lambda v: re.match('4[0-9AB][123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{93}', v), extracted_str))

if bitcoin_wallet:
    print("[+] Bitcoin wallet found:")
    for elem in bitcoin_wallet:
        URL = "https://www.blockchain.com/btc/address/" + elem
        r = requests.get(URL)
        if r.status_code == 200:
            rcv_btc = str(r.text).split("Total Received</span></div></div>")[1].split("BTC</span>")[0].split("opacity=\"1\">")[1]
            print("\t" + elem + " (" + rcv_btc + "BTC)")

if ethereum_wallet:
    print("[+] Ethereum wallet found:")
    for elem in ethereum_wallet:
        URL = "https://www.blockchain.com/eth/address/" + elem
        r = requests.get(URL)
        if r.status_code == 200:
            rcv_btc = str(r.text).split("Total Received</span></div></div>")[1].split("ETH</span>")[0].split("opacity=\"1\">")[1]
            print("\t" + elem + " (" + rcv_btc + "ETH)")

if monero_wallet:
    print("[+] Monero wallet found:")
    for elem in monero_wallet:
        print("\t" + elem + " (MXR)")
