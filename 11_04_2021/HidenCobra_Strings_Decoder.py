# HiddenCobra String Decryptor

kernel32 = [ 'GvgPilxvhhTrnvh', 'GvgPilxvhhTrnvh', 'WrmEcvx', 'FrmwFrihgFrovW', 'LlxaoAoolx', 'CivagvTsivaw', 'RvawFrov', 'GvgFrovSrzv', 'ColhvHamwov', 'GvgTvnkFrovNanvW', 'Pilxvhh32FrihgW', 'DvovgvFrovW', 'LlawLryiaibW', 'GvgEcrgClwvTsivaw', 'GvgFrovTrnv', 'TvinrmagvTsivaw', 'LlxaoFivv', 'WargFliSrmtovOyqvxg', 'WargFliMfogrkovOyqvxgh', 'GvgMlwfovFrovNanvW', 'WirgvFrov', 'Pilxvhh32NvcgW', 'Sovvk', 'MakVrvdOuFrov', 'RvawPilxvhhMvnlib', 'SvgFrovPlrmgvi', 'CivagvTllosvok32Smakhslg', 'GvgTvnkPagsW', 'CivagvPilxvhhW', 'GvgFrovAggiryfgvhW', 'GvgLlxaoTrnv', 'GvgSbhgvnDrivxglibW', 'GvgVlofnvImulinagrlmW', 'GvgCfiivmgPilxvhh', 'UmnakVrvdOuFrov', 'GvgVvihrlmEcW', 'SvgFrovTrnv', 'GvgLltrxaoDirevh', 'GvgCfiivmgDrivxglibW', 'SvgCfiivmgDrivxglibW', 'OkvmPilxvhh', 'CivagvFrovW', 'TvinrmagvPilxvhh', 'FivvLryiaib', 'VrigfaoPilgvxgEc', 'WirgvPilxvhhMvnlib', 'GvgClnkfgviNanvW', 'FrmwNvcgFrovW', 'GvgMlwfovHamwovW', 'MlevFrovEcW', 'FrmwColhv', 'CivagvFrovMakkrmtW', 'VrigfaoQfvibEc', 'GvgDirevTbkvW', 'GvgDrhpFivvSkaxvEcW', 'GvgLahgEiili', 'SvgLahgEiili', 'VrigfaoAoolxEc', 'CivagvRvnlgvTsivaw', 'FrmwRvhlfixvW', 'LlawRvhlfixv', 'LlxpRvhlfixv', 'GvgTrxpClfmg' ]
advapi32 = [ 'OkvmPilxvhhTlpvm', 'RvtOkvmKvbW', 'ClmgiloSvierxv', 'SvgSvierxvSgagfh', 'ColhvSvierxvHamwov', 'AwqfhgTlpvmPirerovtvh', 'LllpfkPirerovtvVaofvW', 'GvgTlpvmImulinagrlm', 'LllpfkAxxlfmgSrwW', 'OkvmSvierxvW', 'RvtDvovgvKvbW', 'DvovgvSvierxv', 'RvtDvovgvVaofvW', 'CsamtvSvierxvClmurt2W', 'OkvmSCMamatviW', 'CivagvSvierxvW', 'SgaigSvierxvW', 'RvtSvgVaofvEcW', 'RvtColhvKvb', 'RvtrhgviSvierxvCgioHamwoviW', 'RvtCivagvKvbW', 'RvtOkvmKvbEcW', 'RvtQfvibVaofvEcW', 'GvgUhviNanvW', 'CivagvPilxvhhAhUhviW' ]
wtsapi32 = [ 'WTSQfvibUhviTlpvm', 'WTSEmfnviagvSvhhrlmhW' ]
ws2_32 = [ 'WSACovamfk', 'ivxe', 'hvghlxplkg', 'WSASgaigfk', 'orhgvm', 'hsfgwldm', 'tvgslhgybmanv', 'tvgkvvimanv', 'axxvkg', 'rlxgohlxpvg', 'xlmmvxg', 'xolhvhlxpvg', 'hlxpvg', 'sglmh', 'hvovxg', 'hvmw', '__WSAFDIhSvg', 'yrmw', 'rmvg_awwi' ]
iphlpapi = [ 'GvgAwakgvihImul' ]

def string_decrypt(encrypted):
    decrypted = ""
    for letter in encrypted:
        # Do not process uppercase letters or integers
        if ord(letter) >= 0x62 and ord(letter) <= 0x79: 
            decrypted += chr(0xDB - ord(letter))
        else:
            decrypted += letter
    return decrypted

for encrypted in iphlpapi:
    print(encrypted, ':', string_decrypt(encrypted))
