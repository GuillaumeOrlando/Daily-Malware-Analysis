Hidden Cobra 

MD5: e48fe20eb1f5a5887f2ac631fed9ed63

File: hidden_cobra.bin

C/C++ Microsoft compiler

High entropy for the .txt section

Original file name: "regsvr32.exe.mui"

Start a new thread to do it's activities

========================================

## RC4 decipher

Decipher some buffer to retreive informations using a custom algorithm (function 0x00402EA0)
Thoses encrypted buffer are created bytes by bytes

For instance, the first encrypted buffer resolved to the string: "5mkfJY7kjmHcj4jlxG6jhsdRT7Faw7fj"

The RC4 algorithm is used, but everything is was done by hand (the Windows CryptoAPI was not used, in a attempt to stay under the radars):
* The KSA starts at 0x00402FA0
* The PRGA starts at 0x00402FCF
* Then, the final XOR is done at 0x403010
* THE RC4 key is [0xD, 0x6, 0x9, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0xD, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82 ]

A small twist is added to the standard RC4 algorithm, with a xor beeing used on the input cyphertext, but nothing too fancy.

========================================

## Dynamic imports

Some IAT related strings are decipher using a simple one-way algorithm.

The "Kernel32.dll" string is recovered and the library is loaded with LoadLibraryW.

Then, a bunch of functions name are also recovered and loaded with GetProcAddress.

Fun thing to note: GetProcAddress is resolved with an hardcoded GetProcAddress :)

The script 'hidden_cobra_string_decryptor.py', available in this repo, was created in order to automate the recovery of the scrambled strings used to import critical functions.

Here is an exemple of the original flow of string 'decryption':
```C
      LOBYTE(plain_GetProcesTime[0]) = 0;
      memset((char *)plain_GetProcesTime + 1, 0, 0xFCu);
      v166 = 0;
      v167 = 0;
      func_mem_copy_encrypted(plain_GetProcesTime, 256u, (int)aGvgpilxvhhtrnv);
      v6 = (char *)plain_GetProcesTime;
      if ( LOBYTE(plain_GetProcesTime[0]) )
      {
        do
        {
          v7 = *v6;
          if ( *v6 >= 'b' && v7 <= 'y' )
            *v6 = -37 - v7;
        }
        while ( *++v6 );
      }
      resolved_GetProcessTime = resolved_GetProcAddress(hKernel32, plain_GetProcesTime, a1, a2);
```

========================================

## Resolved functions:
 ```
[root@Arch Share]# python3 strings_decode.py 
GvgPilxvhhTrnvh 	: GetProcessTimes
GvgPilxvhhTrnvh 	: GetProcessTimes
WrmEcvx 		: WinExec
FrmwFrihgFrovW 		: FindFirstFileW
LlxaoAoolx 		: LocalAlloc
CivagvTsivaw 		: CreateThread
RvawFrov 		: ReadFile
GvgFrovSrzv 		: GetFileSize
ColhvHamwov 		: CloseHandle
GvgTvnkFrovNanvW 	: GetTempFileNameW
Pilxvhh32FrihgW 	: Process32FirstW
DvovgvFrovW 		: DeleteFileW
LlawLryiaibW 		: LoadLibraryW
GvgEcrgClwvTsivaw 	: GetExitCodeThread
GvgFrovTrnv 		: GetFileTime
TvinrmagvTsivaw 	: TerminateThread
LlxaoFivv 		: LocalFree
WargFliSrmtovOyqvxg 	: WaitForSingleObject
WargFliMfogrkovOyqvxgh 	: WaitForMultipleObjects
GvgMlwfovFrovNanvW 	: GetModuleFileNameW
WirgvFrov 		: WriteFile
Pilxvhh32NvcgW 		: Process32NextW
Sovvk 			: Sleep
MakVrvdOuFrov 		: MapViewOfFile
RvawPilxvhhMvnlib 	: ReadProcessMemory
SvgFrovPlrmgvi 		: SetFilePointer
CivagvTllosvok32Smakhslg : CreateToolhelp32Snapshot
GvgTvnkPagsW 		: GetTempPathW
CivagvPilxvhhW 		: CreateProcessW
GvgFrovAggiryfgvhW 	: GetFileAttributesW
GvgLlxaoTrnv 		: GetLocalTime
GvgSbhgvnDrivxglibW 	: GetSystemDirectoryW
GvgVlofnvImulinagrlmW 	: GetVolumeInformationW
GvgCfiivmgPilxvhh 	: GetCurrentProcess
UmnakVrvdOuFrov 	: UnmapViewOfFile
GvgVvihrlmEcW 		: GetVersionExW
SvgFrovTrnv 		: SetFileTime
GvgLltrxaoDirevh 	: GetLogicalDrives
GvgCfiivmgDrivxglibW 	: GetCurrentDirectoryW
SvgCfiivmgDrivxglibW 	: SetCurrentDirectoryW
OkvmPilxvhh 		: OpenProcess
CivagvFrovW 		: CreateFileW
TvinrmagvPilxvhh 	: TerminateProcess
FivvLryiaib 		: FreeLibrary
VrigfaoPilgvxgEc 	: VirtualProtectEx
WirgvPilxvhhMvnlib 	: WriteProcessMemory
GvgClnkfgviNanvW 	: GetComputerNameW
FrmwNvcgFrovW 		: FindNextFileW
GvgMlwfovHamwovW 	: GetModuleHandleW
MlevFrovEcW 		: MoveFileExW
FrmwColhv 		: FindClose
CivagvFrovMakkrmtW 	: CreateFileMappingW
VrigfaoQfvibEc 		: VirtualQueryEx
GvgDirevTbkvW 		: GetDriveTypeW
GvgDrhpFivvSkaxvEcW 	: GetDiskFreeSpaceExW
GvgLahgEiili 		: GetLastError
SvgLahgEiili 		: SetLastError
VrigfaoAoolxEc 		: VirtualAllocEx
CivagvRvnlgvTsivaw 	: CreateRemoteThread
FrmwRvhlfixvW 		: FindResourceW
LlawRvhlfixv 		: LoadResource
LlxpRvhlfixv 		: LockResource
GvgTrxpClfmg 		: GetTickCount
 ```