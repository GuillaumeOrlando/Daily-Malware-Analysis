import os
import hashlib

base_path = './Payloads/loader_0/'
stage_1_path = './Payloads/loader_1/'

def extract_byearray(raw, fname):
    cnt = 0
    for elem in raw.split('Byte[]]'):
        if ',' in elem and '$' in elem and '(' in elem and '=' in elem and ')' in elem and 'System' not in elem:
            cnt += 1
            array_name = elem.split('=')[0].replace('$', '')
            array = elem.split('(')[1].split(')')[0].replace(' ','').split(',')
            int_array = [int(numeric_string) for numeric_string in array]
            target = stage_1_path + array_name + '_' + fname
            with open(target, 'wb') as f:
                f.write(bytearray(int_array))
            md5 = hashlib.md5(bytearray(int_array)).hexdigest()
            print('  %s written to %s (MD5: %s)' % (array_name, target, md5))
    return

def extract_csharp_array(raw, fname):
    cnt = 0
    for elem in raw.split('@('):
        if ')' in elem and ',' in elem:
            p_array = elem.split(')')[0]
            if '"' not in p_array:
                array = p_array.split(',')
                array_name = '%d%s' % (cnt, '_array')
                int_array = [int(numeric_string) for numeric_string in array]
                target = stage_1_path + array_name + '_' + fname
                with open(target, 'wb') as f:
                    f.write(bytearray(int_array))
                md5 = hashlib.md5(bytearray(int_array)).hexdigest()
                print('  %s written to %s (MD5: %s)' % (array_name, target, md5))
                cnt += 1
    return

for file in os.listdir(base_path):
    path = base_path + file
    print('Processing: %s' % path)
    with open(path, 'r') as f:
        content = f.read()
    if 'alosh_rat' in content and 'Byte[]]$new=' in content:
        print('  Alosh RAT type 1 (powershell Byte array version)')
        extract_byearray(content, file)
    if 'CodeDom $ALOSH' in content and '3losh rat' in content:
        print('  Alosh RAT type 2 (C# version)')
        extract_csharp_array(content, file)
    else:
        print('  Unknown payload, skiping ...')
